---
- name: Install Docker, AWS CLI, and Deploy Docker Image from ECR
  hosts: all
  become: yes
  gather_facts: no  # Skip gathering facts to speed up the deployment
  tasks:

    # Update apt cache and upgrade packages
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Upgrade all packages
      apt:
        upgrade: yes

    # Install dependencies for Docker and AWS CLI
    - name: Install dependencies for Docker and AWS CLI
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    # Install Docker
    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Start Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    # Install AWS CLI
    - name: Install AWS CLI
      apt:
        name: awscli
        state: present

    # Configure AWS CLI with provided credentials
    - name: Configure AWS CLI with provided credentials
      shell: |
        aws configure set aws_access_key_id {{ aws_access_key_id }}
        aws configure set aws_secret_access_key {{ aws_secret_access_key }}
        aws configure set region {{ aws_region }}
      environment:
        AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
        AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
        AWS_REGION: "{{ aws_region }}"

    # Authenticate Docker to AWS ECR
    - name: Authenticate Docker to AWS ECR
      shell: |
        $(aws ecr get-login --no-include-email --region {{ aws_region }})

    # Pull Docker image from ECR
    - name: Pull Docker image from ECR
      docker_image:
        name: "{{ ecr_image_name }}"
        source: pull

    # Run Docker container
    - name: Run Docker container
      docker_container:
        name: "incident_tracker_container"
        image: "{{ ecr_image_name }}"
        state: started
        restart_policy: unless-stopped
